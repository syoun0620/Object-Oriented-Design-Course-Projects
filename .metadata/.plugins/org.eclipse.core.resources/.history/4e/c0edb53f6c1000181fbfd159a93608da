package hw3;

import java.util.Map;
import java.util.Scanner;

public class DiceGameHandler {
	final int PLAYER_KIND = 3;
	private Game game;
	private Scanner sc;
	GameConnection conn = new GameConnection("YounDiceGame20");
	Map<String, Player> playerMap = conn.getMap();
	Player[] players;
	
	public void setUp(){
		sc = new Scanner(System.in);
		System.out.print("How many players do you want in this game?: ");
		int numPlayer = sc.nextInt();
	
		while (numPlayer <2){
			System.out.println("At least 2 players are required.");
			numPlayer = sc.nextInt();
		}
		String pname;
		int ptype;
		
		players = new Player[numPlayer];
		for (int i = 0; i<numPlayer; i++){
			System.out.print("Enter player name: ");
			pname = sc.next();
			if (playerMap.get(pname) != null){ // if the username exists in Map.
				// if the existing player is Human, I have to start Scanner because Scanner was not saved in Map. 
				if (playerMap.get(pname) instanceof HumanPlayer){ 
					((HumanPlayer)playerMap.get(pname)).setScanner(sc);
				}
				players[i] = playerMap.get(pname);
			}
			else{  // if the username does NOT exists in Map. 
				System.out.print("Choose the type of " + pname + " (1 = human player, 2 = timid player, 3 = crafty player): ");
				ptype = sc.nextInt();
				if (ptype != 0 && ptype < PLAYER_KIND+1){
					if (ptype == 1){
						players[i] = new HumanPlayer(pname, this.sc);
					}
					else if (ptype == 2){
						players[i] = new TimidPlayer(pname);
					}
					else if (ptype == 3){
						players[i] = new CraftyPlayer(pname);
					}
					playerMap.put(pname, players[i]); 
	
				}
				else{
					System.out.println("Please choose a correct input.");
					i--;
				}
			}
		}
		System.out.println(""); // to have empty line. 
		
		game = new Game(players);	
	}
	
	public void run(){
		while (!game.isDone()){
			game.elapseOneTurn();
		}
	}

	public void elapseOneTurn(){
		game.elapseOneTurn();
	}

	public void updateWinLoss(){
		game.updateWinLoss();
	}
	
	public void printWinner(){
		System.out.println("Congrats! The winner is " + game.getTopPlayer().getPlayerName() + 
				". Here are info about winner! " + game.getTopPlayer().toString());
	}
	
	public void resetPlayerChip(){
		for (Player p: players){
			p.setChipZero();
		}
	}
	
	public void savePlayers(){
		conn.saveMap(playerMap);
		sc.close();
	}
}
